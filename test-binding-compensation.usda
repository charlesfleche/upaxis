#usda 1.0
(
	defaultPrim = "Mesh"
	metersPerUnit = .1
	upAxis = "Y"
)

def "Axis_ExcludedFromCompensation" (
	references = @./axis.usda@
)
{
}

def Mesh "Mesh" (
    prepend apiSchemas = ["SkelBindingAPI"]
)
{
    float3 xformOp:scale:compensation:metersPerUnit:metersToDecimeters = (10, 10, 10)
	float3 xformOp:rotateXYZ:compensation:upAxis:ZToY = (-90, 0, 0)
    matrix4d xformOp:transform:compensation = (
		(10,  0,   0, 0),
        ( 0,  0, -10, 0),
        ( 0, 10,   0, 0),
        ( 0,  0,   0, 1)
	)

    float3 xformOp:rotateXYZ:payload = (0, -90, 0)
    float3 xformOp:translate:payload = (1, 0, 0)

    uniform token[] xformOpOrder = [
		"xformOp:transform:compensation",
		"!invert!xformOp:transform:compensation",

		"xformOp:scale:compensation:metersPerUnit:metersToDecimeters",
		"xformOp:rotateXYZ:compensation:upAxis:ZToY",

        "xformOp:rotateXYZ:payload",
        "xformOp:translate:payload"
	]

    matrix4d primvars:skel:geomBindTransform = (
        (  0, 10,   0, 0),
        (  0,  0, -10, 0),
        (-10,  0,   0, 0),
        (  0, 10,   0, 1)
    )

    int[] faceVertexCounts = [3]
    int[] faceVertexIndices = [0, 1, 2]
    point3f[] points = [
        (.0, 0, 0),
        (.5, 0, 0),
        (.0, 0, 1)
    ]
    color3f[] primvars:displayColor = [
        (0, 0, 0),
        (1, 0, 0),
        (0, 0, 1)
    ] (
        interpolation = "vertex"
        elementSize = 1
    )
}
