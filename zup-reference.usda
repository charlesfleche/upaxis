#usda 1.0
(
	defaultPrim = "SkelRoot"
	startTimeCode = 1
	endTimeCode = 10
	metersPerUnit = 1
	upAxis = "Z"
)

def Mesh "Axis"
{
    int[] faceVertexCounts = [3, 3, 3, 3]
    int[] faceVertexIndices = [0, 1, 3, 1, 2, 3, 2, 0, 3, 0, 2, 1]
    point3f[] points = [(0, 0, 0), (1, 0, 0), (0, 1, 0),(0, 0, 1)]
    color3f[] primvars:displayColor = [(0, 0, 0), (1, 0, 0), (0, 1, 0), (0, 0, 1)] (
        interpolation = "vertex"
        elementSize = 1
    )
}

def Mesh "NotCompensated"
{
	float3 xformOp:translate = (0, 1, 0)
    uniform token[] xformOpOrder = ["xformOp:translate"]

	int[] faceVertexCounts = [3]
    int[] faceVertexIndices = [0, 1, 2]
    point3f[] points = [(0, 0, 0), (.5, 0, 0), (0, 1, 0)]
}

def SkelRoot "SkelRoot" (
    kind = "component"
    prepend apiSchemas = ["SkelBindingAPI"]
)
{
	def Skeleton "Skeleton" (
		prepend apiSchemas = ["SkelBindingAPI"]
	)
	{
		uniform token[] joints = ["bottom", "bottom/top"]
		uniform matrix4d[] bindTransforms = [(
				(1.0, 0.0, 0.0, 0.0),
				(0.0, 1.0, 0.0, 0.0),
				(0.0, 0.0, 1.0, 0.0),
				(0.0, 0.0, 1.0, 1.0)
			), (
				(1.0, 0.0, 0.0, 0.0),
				(0.0, 1.0, 0.0, 0.0),
				(0.0, 0.0, 1.0, 0.0),
				(0.0, 0.0, 2.0, 1.0)
		)]
		uniform matrix4d[] restTransforms = [(
				(1.0, 0.0, 0.0, 0.0),
				(0.0, 1.0, 0.0, 0.0),
				(0.0, 0.0, 1.0, 0.0),
				(0.0, 0.0, 1.0, 1.0)
			), (
				(1.0, 0.0, 0.0, 0.0),
				(0.0, 1.0, 0.0, 0.0),
				(0.0, 0.0, 1.0, 0.0),
				(0.0, 0.0, 1.0, 1.0)
		)]

		def SkelAnimation "SkelAnimation" {
			uniform token[] joints = ["bottom", "bottom/top"]

           float3[] translations.timeSamples = {
				1: [(0, 0, 1), (0, 0, 1)],
				10: [(0, 0, 1), (0, 0, 2)]
			}
            quatf[] rotations.timeSamples = {
                1: [(1, 0, 0, 0), (1, 0, 0, 0)],
                10: [(0.7071, 0, 0, 0.7071), (1, 0, 0, 0)]
            }
            half3[] scales = [(1, 1, 1), (1, 1, 1)]
		}

		rel skel:animationSource = </SkelRoot/Skeleton/SkelAnimation>
	}

	def Mesh "Mesh" (
		prepend apiSchemas = ["SkelBindingAPI"]
	)
	{
		int[] faceVertexCounts = [3]
		int[] faceVertexIndices = [0, 1, 2]
		point3f[] points = [
			(.0, 0, 1),
			(.5, 0, 1),
			(.0, 0, 2)
		]
		color3f[] primvars:displayColor = [
			(0, 0, 0),
			(1, 0, 0),
			(0, 0, 1)
		] (
			interpolation = "vertex"
			elementSize = 1
		)
		
		rel skel:skeleton = </SkelRoot/Skeleton>
		
		int[] primvars:skel:jointIndices = [0, 0, 1] (
			interpolation = "vertex"
			elementSize = 1
		)
		float[] primvars:skel:jointWeights = [1, 1, 1] (
			interpolation = "vertex"
			elementSize = 1
		)
	}
}
